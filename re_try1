from airflow import DAG
from airflow.operators.python_operator import PythonOperator
from datetime import datetime, timedelta

# Define the DAG
default_args = {
    'owner': 'airflow',
    'retries': 1,  # Default retry count
    'retry_delay': timedelta(seconds=5),  # Default retry delay for all tasks (optional)
}

def fail_task():
    raise ValueError("This task failed intentionally!")

with DAG(
    dag_id='retry_example_dag',
    default_args=default_args,
    start_date=datetime(2023, 1, 1),
    schedule_interval='@daily',
) as dag:

    # Task 1: Fail intentionally
    task1 = PythonOperator(
        task_id='task1',
        python_callable=fail_task
    )
    
    # Task 2: Fail intentionally and retry
    task2 = PythonOperator(
        task_id='task2',
        python_callable=fail_task,
        retries=3,  # Number of retries for this task
        retry_delay=timedelta(seconds=30)  # Delay before retry
    )
    
    # Task 3: Success dummy task
    task3 = PythonOperator(
        task_id='task3',
        python_callable=lambda: print("This task succeeded.")
    )

    # Set task dependencies
    task1 >> task2 >> task3
